{
  "name": "grunt-bump",
  "description": "Bump package version",
  "version": "0.0.17",
  "homepage": "https://github.com/vojtajina/grunt-bump",
  "author": {
    "name": "Vojta Jína",
    "email": "vojta.jina@gmail.com"
  },
  "contributors": [
    {
      "name": "Eddie Monge",
      "email": "eddie@eddiemonge.com"
    },
    {
      "name": "Mathias Paumgarten",
      "email": "paumgarten@soapcreative.com"
    },
    {
      "name": "Elfrey Shira",
      "email": "elfrey.shira@opower.com"
    },
    {
      "name": "adam j. sontag",
      "email": "ajpiano@ajpiano.com"
    },
    {
      "name": "Jonas Rabbe",
      "email": "jonas.rabbe@gmail.com"
    },
    {
      "name": "travis4all",
      "email": "travis4all@diamon.dz"
    },
    {
      "name": "Michael Hellein",
      "email": "themichaek@gmail.com"
    },
    {
      "name": "Mário Gonçalves",
      "email": "mario.mc.goncalves@gmail.com"
    },
    {
      "name": "Nils Winkler",
      "email": "nils.winkler@sungard.com"
    },
    {
      "name": "RobinQu",
      "email": "robinqu@gmail.com"
    },
    {
      "name": "Snugug",
      "email": "snugug@gmail.com"
    },
    {
      "name": "angleman",
      "email": "angleman@users.noreply.github.com"
    },
    {
      "name": "cattail",
      "email": "zhongchiyu@gmail.com"
    },
    {
      "name": "Adam Biggs",
      "email": "adam.biggs@lightmaker.com"
    },
    {
      "name": "ylesaout",
      "email": "ylesaout@gmail.com"
    },
    {
      "name": "Christopher Van",
      "email": "cvan@mozilla.com"
    },
    {
      "name": "Christopher Van",
      "email": "cvan@users.noreply.github.com"
    },
    {
      "name": "Gavin",
      "email": "gavin@kodekoan.com"
    },
    {
      "name": "Jarrett Drouillard",
      "email": "jarrett@thestyl.us"
    },
    {
      "name": "Mathias Paumgarten",
      "email": "mail@mathias-paumgarten.com"
    },
    {
      "name": "Mayhem",
      "email": "stepien.nicolas@gmail.com"
    }
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/vojtajina/grunt-bump.git"
  },
  "bugs": {
    "url": "https://github.com/vojtajina/grunt-bump/issues"
  },
  "main": "tasks/bump.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt nodeunit"
  },
  "license": "MIT",
  "dependencies": {
    "semver": "~2.3.0"
  },
  "peerDependencies": {
    "grunt": ">=0.4.0"
  },
  "devDependencies": {
    "grunt": "^0.4.0",
    "grunt-auto-release": "^0.0.6",
    "grunt-contrib-clean": "^0.5.0",
    "grunt-contrib-jshint": "^0.10.0",
    "grunt-contrib-nodeunit": "^0.4.0",
    "grunt-conventional-changelog": "^1.1.0",
    "grunt-npm": "^0.0.2",
    "load-grunt-tasks": "^0.4.0"
  },
  "keywords": [
    "gruntplugin"
  ],
  "readme": "# grunt-bump\n\n> Bump package version, create tag, commit, push ...\n\n## Getting Started\nThis plugin requires Grunt.\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-bump --save-dev\n```\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-bump');\n```\n\n### Configuration\nIn your project's Gruntfile, add a section named `bump` to the data object passed into `grunt.initConfig()`. The options (and defaults) are:\n\n```js\ngrunt.initConfig({\n  bump: {\n    options: {\n      files: ['package.json'],\n      updateConfigs: [],\n      commit: true,\n      commitMessage: 'Release v%VERSION%',\n      commitFiles: ['package.json'],\n      createTag: true,\n      tagName: 'v%VERSION%',\n      tagMessage: 'Version %VERSION%',\n      push: true,\n      pushTo: 'upstream',\n      gitDescribeOptions: '--tags --always --abbrev=1 --dirty=-d',\n      globalReplace: false\n    }\n  },\n})\n```\n\n### Options\n\n#### options.files\nType: `Array`\nDefault value: `['package.json']`\n\nMaybe you wanna bump 'component.json' instead? Or maybe both: `['package.json', 'component.json']`? Can be either a list of files to bump (an array of files) or a grunt glob (e.g., `['*.json']`).\n\n#### options.updateConfigs\nType: `Array`\nDefault value: `[]`\n\nSometimes you load the content of `package.json` into a grunt config. This will update the config property, so that even tasks running in the same grunt process see the updated value.\n\n```js\nbump: {\n  files:         ['package.json', 'component.json'],\n  updateConfigs: ['pkg',          'component']\n}\n```\n\n#### options.commit\nType: `Boolean`\nDefault value: `true`\n\nShould the changes be committed? False if you want to do additional things.\n\n#### options.commitMessage\nType: `String`\nDefault value: `Release v%VERSION%`\n\nIf so, what is the commit message ? You can use `%VERSION%` which will get replaced with the new version.\n\n#### options.commitFiles\nType: `Array`\nDefault value: `['package.json']`\n\nAn array of files that you want to commit. You can use `['-a']` to commit all files.\n\n#### options.createTag\nType: `Boolean`\nDefault value: `true`\n\nCreate a Git tag?\n\n#### options.tagName\nType: `String`\nDefault value: `v%VERSION%`\n\nIf `options.createTag` is set to true, then this is the name of that tag (`%VERSION%` placeholder is available).\n\n#### options.tagMessage\nType: `String`\nDefault value: `Version %VERSION%`\n\nIf `options.createTag` is set to true, then yep, you guessed right, it's the message of that tag - description (`%VERSION%` placeholder is available).\n\n#### options.push\nType: `Boolean`\nDefault value: `true`\n\nPush the changes to a remote repo?\n\n#### options.pushTo\nType: `String`\nDefault value: `upstream`\n\nIf `options.push` is set to true, which remote repo should it go to? This is what gets set as `remote` in the `git push {remote} {branch}` command. Use `git remote` to see the list of remote repo's you have listed. [Learn about remote repos](http://git-scm.com/book/en/v2/Git-Basics-Working-with-Remotes)\n\n#### options.gitDescribeOptions\nType: `String`\nDefault value: `--tags --always --abbrev=1 --dirty=-d`\n\nOptions to use with `$ git describe`\n\n#### options.globalReplace\nType: `Boolean`\nDefault value: `false`\n\nReplace all occurrences of the version in the file. When set to `false`, only the first occurrence will be replaced.\n\n### Usage Examples\n\nLet's say current version is `0.0.1`.\n\n```bash\n$ grunt bump\n>> Version bumped to 0.0.2\n>> Committed as \"Release v0.0.2\"\n>> Tagged as \"v0.0.2\"\n>> Pushed to origin\n\n$ grunt bump:patch\n>> Version bumped to 0.0.3\n>> Committed as \"Release v0.0.3\"\n>> Tagged as \"v0.0.3\"\n>> Pushed to origin\n\n$ grunt bump:minor\n>> Version bumped to 0.1.0\n>> Committed as \"Release v0.1.0\"\n>> Tagged as \"v0.1.0\"\n>> Pushed to origin\n\n$ grunt bump:major\n>> Version bumped to 1.0.0\n>> Committed as \"Release v1.0.0\"\n>> Tagged as \"v1.0.0\"\n>> Pushed to origin\n\n$ grunt bump:prerelease\n>> Version bumped to 1.0.0-1\n>> Committed as \"Release v1.0.0-1\"\n>> Tagged as \"v1.0.0-1\"\n>> Pushed to origin\n\n$ grunt bump:patch\n>> Version bumped to 1.0.1\n>> Committed as \"Release v1.0.1\"\n>> Tagged as \"v1.0.1\"\n>> Pushed to origin\n\n$ grunt bump:git\n>> Version bumped to 1.0.1-ge96c\n>> Committed as \"Release v1.0.1-ge96c\"\n>> Tagged as \"v1.0.1-ge96c\"\n>> Pushed to origin\n````\n\nIf you want to jump to an exact version, you can use the ```setversion``` tag in the command line.\n\n```bash\n$ grunt bump --setversion=2.0.1\n>> Version bumped to 2.0.1\n>> Committed as \"Release v2.0.1\"\n>> Tagged as \"v2.0.1\"\n>> Pushed to origin\n```\n\nSometimes you want to run another task between bumping the version and committing, for instance generate changelog. You can use `bump-only` and `bump-commit` to achieve that:\n\n```bash\n$ grunt bump-only:minor\n$ grunt changelog\n$ grunt bump-commit\n```\n\n## Contributing\nSee the [contributing guide](https://github.com/vojtajina/grunt-bump/blob/master/CONTRIBUTING.md) for more information. In lieu of a formal style guide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/): `grunt test jshint`.\n\n## License\nCopyright (c) 2014 Vojta Jína. Licensed under the MIT license.\n",
  "readmeFilename": "README.md",
  "_id": "grunt-bump@0.0.17",
  "_from": "grunt-bump@~0.0.10"
}
