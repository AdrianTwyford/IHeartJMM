var common = require('../common');
var CHUNK_LENGTH = 10,
    multipartParser = require(common.lib + '/multipart_parser'),
    MultipartParser = multipartParser.MultipartParser,
    parser = new MultipartParser(),
    fixtures = require(TEST_FIXTURES + '/multipart'),
    Buffer = require('buffer').Buffer;

Object.keys(fixtures).forEach(function(name) {
  var fixture = fixtures[name],
      buffer = new Buffer(Buffer.byteLength(fixture.raw, 'binary')),
      offset = 0,
      chunk,
      nparsed,

      parts = [],
      part = null,
      headerField,
      headerValue,
      endCalled = '';

  parser.initWithBoundary(fixture.boundary);
  parser.onPartBegin = function() {
    part = {headers: {}, data: ''};
    parts.push(part);
    headerField = '';
    headerValue = '';
  };

  parser.onHeaderField = function(b, start, end) {
    headerField += b.toString('ascii', start, end);
  };

  parser.onHeaderValue = function(b, start, end) {
    headerValue += b.toString('ascii', start, end);
  }

  parser.onHeader