{
  "name": "sauce-tap-runner",
  "version": "0.1.2",
  "description": "Automate running TAP browser unit tests on Sauce Labs",
  "main": "index.js",
  "scripts": {
    "test": "node test.js"
  },
  "repository": {
    "type": "git",
    "url": "http://github.com/conradz/sauce-tap-runner.git"
  },
  "keywords": [
    "webdriver",
    "wd",
    "test",
    "tests",
    "saucelabs",
    "sauce",
    "tap"
  ],
  "author": {
    "name": "Conrad Zimmerman",
    "email": "me@conradz.com"
  },
  "license": "BSD",
  "bugs": {
    "url": "https://github.com/conradz/sauce-tap-runner/issues"
  },
  "dependencies": {
    "wd-tap-runner": "~0.1.0",
    "wd": "~0.2.3",
    "sauce-connect-launcher": "~0.2.1",
    "sauce-results": "~0.1.0"
  },
  "devDependencies": {
    "async": "~0.2.9"
  },
  "readme": "# sauce-tap-runner\r\n\r\n[![NPM](https://nodei.co/npm/sauce-tap-runner.png?compact=true)](https://nodei.co/npm/sauce-tap-runner/)\r\n\r\nRun TAP unit tests in the browser using\r\n[Sauce Labs](https://saucelabs.com/home) hosted browsers. This helper takes care\r\nof setting up the tunnel to Sauce Labs servers and provides the test page and\r\nTAP parsing. It will also set the test result status on Sauce Labs so that you\r\ncan use the awesome [status images](https://saucelabs.com/docs/status-images).\r\n(Note that you must also set the `build` field on the desired capabilities\r\nobject for the images to work.)\r\n\r\n## Example\r\n\r\n```js\r\nvar Runner = require('sauce-tap-runner'),\r\n    browserify = require('browserify'),\r\n    async = require('async');\r\n\r\nvar tests = new Runner(sauceUser, sauceKey),\r\n    // Browserify is not required, can use either a string or stream of JS code\r\n    src = browserify().add('tests.js').bundle();\r\n\r\nasync.series([run('chrome'), run('firefox')], closeTests);\r\n\r\nfunction run(browser) {\r\n    // Return a function that when called will run tests in the specified\r\n    // browser\r\n\r\n    return function(callback) {\r\n        tests.run(src, { browserName: browser }, function(err, results) {\r\n            if (err) {\r\n                return callback(err);\r\n            }\r\n\r\n            console.log(results);\r\n            callback();\r\n        });\r\n    };\r\n}\r\n\r\nfunction closeTests(err) {\r\n    if (err) {\r\n        console.error(err);\r\n    } else {\r\n        console.log('Tests completed');\r\n    }\r\n\r\n    tests.close(function() {\r\n        // Runner is closed\r\n    });\r\n}\r\n```\r\n\r\n## Reference\r\n\r\n### `new Runner(sauceUser, sauceKey)`\r\n\r\nCreates a new test runner. A single test runner maintains a single Sauce Connect\r\ntunnel. Using a single runner for all your tests will improve speed as it takes\r\ntime to setup the tunnel. A tunnel will only be created when you run the tests.\r\n\r\n`sauceUser` and `sauceKey` must be your Sauce Labs username and key.\r\n\r\n### `#run(src, desiredCapabilities, [options], [callback])`\r\n\r\nRuns the tests in a new browser. It will create a new WebDriver connection to\r\nthe browser and run the JS tests provided. It is not able to run tests in\r\nparallel; you must wait till one test is completed before running the next.\r\n\r\n`src` can be a string or stream containing the JS code for the tests. The tests\r\nshould output TAP-compatible results to the browser console using `console.log`.\r\n\r\n`desiredCapabilities` is an object that will be passed to the Sauce Labs server\r\nwhen creating the browser. See\r\n[the docs](https://saucelabs.com/docs/additional-config) for information on what\r\noptions you can provide. The username and password is automatically set.\r\n\r\n`options` is an optional object containing the options for the test runner. See\r\nthe [wd-tap-runner docs](https://github.com/conradz/wd-tap-runner) for valid\r\noptions.\r\n\r\n`callback` is an optional function that will be called with the error if any\r\noccurred and the test results. Note that failed tests are not considered errors;\r\nthey will be reported in the results. The results are the same as for\r\n[wd-tap-runner](https://github.com/conradz/wd-tap-runner).\r\n\r\n### `#close([callback])`\r\n\r\nCloses the Sauce Connect tunnel. Will call `callback` when everything is closed.\r\nAll tests must be finished before closing.\r\n\r\n### Events\r\n\r\n`Runner` inherits from `EventEmitter`. It will emit the following events:\r\n\r\n * `tunnel-connect`: Starting to connect the Sauce Connect tunnel\r\n * `tunnel(tunnel)`: The Sauce Connect tunnel has been connected\r\n * `tunnel-error(err)`: An error occurred when connecting the Sauce Connect\r\n   tunnel\r\n * `browser(browser)`: Successfully connected to a new browser\r\n * `results(results)`: A test run has finished\r\n * `close`: The runner has been closed\r\n",
  "readmeFilename": "README.md",
  "homepage": "https://github.com/conradz/sauce-tap-runner",
  "_id": "sauce-tap-runner@0.1.2",
  "_from": "sauce-tap-runner@~0.1.1"
}
