{
  "name": "component-builder",
  "description": "builder for component",
  "version": "1.2.1",
  "author": {
    "name": "Jonathan Ong",
    "email": "me@jongleberry.com",
    "url": "http://jongleberry.com"
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "component/builder2.js"
  },
  "dependencies": {
    "chanel": "^2.0.0",
    "co": "^3.1.0",
    "component-flatten": "^1.0.1",
    "component-manifest": "^1.0.0",
    "component-require2": "^1.0.1",
    "cp": "^0.1.1",
    "debug": "*",
    "generator-supported": "~0.0.1",
    "graceful-fs": "^2.0.3",
    "mkdirp": "^0.3.5",
    "requires": "^1.0.0",
    "syntax-error": "^1.1.1"
  },
  "devDependencies": {
    "component-resolver": "^1.2.1",
    "rimraf": "^2.2.6",
    "mocha": "^1.17.0",
    "should": "^3.0.0",
    "gnode": "0",
    "regenerator": "0.4.6"
  },
  "scripts": {
    "test": "NODE=gnode make test",
    "prepublish": "make clean build"
  },
  "readme": "# component-builder2 [![Build Status](https://travis-ci.org/componentjs/builder2.js.png)](https://travis-ci.org/componentjs/builder2.js)\n\nAnother version of component's builder. Some differences:\n\n- Everything is streaming!\n- Split into multiple builders\n- Much leaner `require` implementation\n- Handles newer features like globs\n- Fixes a lot of issues with the previous builder\n\nDepends on:\n\n- [resolver](https://github.com/component/resolver.js) - resolved dependency tree\n- [flatten](https://github.com/jonathanong/flatten.js) - flatten the dependency tree to create a build order\n- [require2](https://github.com/component/require2) - this builder's `require()` implementation.\n- [manifest](https://github.com/component/manifest.js) - unglobs components' fields and creates `file` objects suitable for plugins\n- [builder-es6-module-to-cjs](https://github.com/component/builder-es6-module-to-cjs) - the included ES6 -> CJS plugin\n\nYou may be interested in:\n\n- [bundler](https://github.com/component/bundler.js) - create multiple bundles from the resolved dependency tree\n\n## Installation\n\n    npm install --save-dev component-builder\n    \n_NOTE_: Don't use the npm repo ~~[component-builder2](https://www.npmjs.org/package/component-builder2)~~ anymore. You get both versions [component/builder.js](https://github.com/component/builder.js) and [component/builder2.js](https://github.com/component/builder2.js) at this npm repo now: [component-builder](https://www.npmjs.org/package/component-builder)\n\n## Example\n\n```js\nvar fs = require('fs');\nvar resolve = require('component-resolver');\nvar build = require('component-builder');\n\n// resolve the dependency tree\nresolve(process.cwd(), {\n  // install the remote components locally\n  install: true\n}, function (err, tree) {\n  if (err) throw err;\n\n  // only include `.js` files from components' `.scripts` field\n  build.scripts(tree)\n    .use('scripts', build.plugins.js())\n    .end(function (err, string) {\n      if (err) throw err;\n      fs.writeFileSync('build.js', string);\n    });\n\n  // only include `.css` files from components' `.styles` field\n  build.styles(tree)\n    .use('styles', build.plugins.css())\n    .end(function (err, string) {\n      if (err) throw err;\n      fs.writeFileSync('build.css', string);\n    });\n\n  // only copy `images` to the build folder\n  build.files(tree)\n    .use('images', build.plugins.symlink())\n    .end(); // callback optional\n})\n```\n\n## Builders\n\nThere are three types of builders:\n\n- [`scripts`](https://github.com/component/builder2.js/blob/master/docs/scripts.md) - streaming builder for the `Javascript` file.\n- [`styles`](https://github.com/component/builder2.js/blob/master/docs/styles.md) - streaming builder for the `CSS` file.\n- [`files`](https://github.com/component/builder2.js/blob/master/docs/files.md) - channel-based builder for everything else, which generally means copying or symlinking\n\nYou'll also want to read docs on [`builder`](https://github.com/component/builder2.js/blob/master/docs/builders.md), which all three builders above inherit from.\n\nSee the documentation for more information on each.\n\n## License\n\nThe MIT License (MIT)\n\nCopyright (c) 2014 Jonathan Ong me@jongleberry.com\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n",
  "readmeFilename": "README.md",
  "_id": "component-builder@1.2.1",
  "dist": {
    "shasum": "b60a9b95758edde5b63782e58b4d26afd2d5ec88"
  },
  "_from": "component-builder@^1.1.12",
  "_resolved": "https://registry.npmjs.org/component-builder/-/component-builder-1.2.1.tgz"
}
