{
  "author": {
    "name": "Felix Geisend√∂rfer",
    "email": "felix@debuggable.com",
    "url": "http://debuggable.com/"
  },
  "name": "far",
  "description": "Find and run node.js files.",
  "version": "0.0.7",
  "homepage": "https://github.com/felixge/node-far",
  "repository": {
    "type": "git",
    "url": "git@github.com:felixge/node-far.git"
  },
  "main": "./lib/far.js",
  "bin": {
    "node-far": "./bin/node-far"
  },
  "engines": {
    "node": "*"
  },
  "dependencies": {
    "oop": "0.0.3"
  },
  "devDependencies": {},
  "readme": "# far\n\nA simple test runner that **f**inds **a**nd **r**uns multiple node.js files,\nwhile providing useful information about output and exit codes.\n\n## Philosophy\n\nfar tries to be a good unix citizen. This means all non-essential output is\nwritten to stderr, and only the final result is printed to stdout. Exit codes\nof all executed files are interpreted, and it is easy to combine far with other\ntools like `find` and `xargs`.\n\n## Command Line Interface\n\nBy default, node-far will execute all `*.js` files in the given directories.\n\n``` bash\nnode-far test/\n```\n\nYou can also execute multiple individual files:\n\n``` bash\nnode-far test/test-a.js test/test-b.js\n```\n\nOr you can specify regular expressions to be matched against against the list\nof all included files.\n\n``` bash\nnode-far test/ -i \"test-.*\\.js$\"\n```\nAnd of course you can also exclude files the same way:\n\n``` bash\nnode-far test/ -e \"common\\.js$\"\n```\n\n### Output Verboseness\n\nThe amount of output can be controlled via the `-v` flag. Setting it once, will\nlist all executed tests on one line, as opposed of re-writing the status to the\ncurrent line.\n\n``` bash\nnode-far -v test/\n```\n\nSetting the verbose flag twice, will show the output from all executed files as\nthey are being executed. Otherwise only the output of commands with an exit code\nother than 0 is shown.\n\n``` bash\nnode-far -vv test/\n```\n\n## API Interface\n\nAs shown below, configuring your own test suite can also be done programtically.\n\n``` javascript\nvar far = require('far').create();\n\n// Include an individual file (relative the the current working directory)\nfar.add('my-file.js');\n\n// Include all files from a given directory\nfar.add(__dirname);\n\n// Add an include filter to be matched against all added files before execution\nfar.include(/\\/test-.*\\.js$/);\n\n// Add an exclude filter, which filters out all matching paths before execution\nfar.exclude(/system/);\n\n// Execute the test suite\nfar.execute();\n```\n\n## Todo\n\n* TAP output\n* Handle Ctrl+C\n* Allow setting node flags\n* Execute non-node files\n\n## License\n\nfar is licensed under the MIT license.\n",
  "readmeFilename": "Readme.md",
  "bugs": {
    "url": "https://github.com/felixge/node-far/issues"
  },
  "_id": "far@0.0.7",
  "_from": "far@~0.0.7"
}
