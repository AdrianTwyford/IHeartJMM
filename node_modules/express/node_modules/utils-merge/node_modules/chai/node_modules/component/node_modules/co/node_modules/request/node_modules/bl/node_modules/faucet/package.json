{
  "name": "faucet",
  "version": "0.0.1",
  "description": "human-readable TAP summarizer",
  "main": "index.js",
  "bin": {
    "faucet": "bin/cmd.js"
  },
  "dependencies": {
    "through2": "~0.2.3",
    "tap-parser": "~0.4.0",
    "duplexer": "~0.1.1",
    "sprintf": "~0.1.3",
    "tape": "~2.3.2",
    "minimist": "0.0.5",
    "defined": "0.0.0"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/substack/faucet.git"
  },
  "homepage": "https://github.com/substack/faucet",
  "keywords": [
    "tap",
    "human",
    "test",
    "anything",
    "protocol",
    "pretty"
  ],
  "author": {
    "name": "James Halliday",
    "email": "mail@substack.net",
    "url": "http://substack.net"
  },
  "license": "MIT",
  "readme": "# faucet\n\nhuman-readable TAP summarizer\n\n# example\n\nPipe TAP text into the `faucet` command, get back pretty results:\n\n![piping tap](images/test.gif)\n\nYou can use any runner you want to generate the TAP output. Here we'll use\n[tape](https://npmjs.org/package/tape):\n\n![tape runner](images/falafel.gif)\n\nYou can give the `faucet` command a list of files:\n\n![list of files](images/gutter.gif)\n\nor if you just type `faucet`, any js files in `test/` or `tests/` will be run\nusing the `tape` command internally:\n\n![implicit test/ directory](images/dnode.gif)\n\n# install\n\nTo get the `faucet` command, with [npm](https://npmjs.org) do:\n\n```\nnpm install -g faucet\n```\n\n# generating TAP\n\nThe great thing about TAP is that it's inherently serializable on stdout, so you\ncan use whichever libraries you wish to generate it.\n\nMany test libraries have ways to get TAP output.\n\n[tape](https://npmjs.org/package/tape) and [tap](https://npmjs.org/package/tap)\nwill give you TAP output by default.\n\nWith a [tape](https://npmjs.org/package/tape) test, you would just write\na `test.js` like:\n\n``` js\nvar test = require('tape');\n\ntest('beep boop', function (t) {\n    t.plan(2);\n    \n    t.equal(1 + 1, 2);\n    setTimeout(function () {\n        t.deepEqual(\n            'ABC'.toLowerCase().split(''),\n            ['a','b','c']\n        );\n    });\n});\n```\n\nand then just run the file with `node test.js` to get the TAP output:\n\n```\nTAP version 13\n# beep boop\nok 1 should be equal\nok 2 should be equivalent\n\n1..2\n# tests 2\n# pass  2\n\n# ok\n```\n\nor if you have a directory of files, you can use the `tape` command that you get\nwhen you `npm install -g tape`:\n\n```\n$ tape test/*.js\nTAP version 13\n# stream in a stream\nok 1 should be equivalent\n# expand a streams1 stream\nok 2 should be equivalent\n# expand a streams2 stream\nok 3 should be equivalent\n# expand a streams2 stream with delay\nok 4 should be equivalent\n\n1..4\n# tests 4\n# pass  4\n\n# ok\n\n```\n\nTo get TAP out of [mocha](https://npmjs.org/package/mocha), do `mocha -R tap`:\n\n```\n$ mocha -R tap\n1..17\nok 1  shim found\nok 2  core shim not found\nok 3  false file\nok 4  false module\nok 5  local\nok 6  index.js of module dir\nok 7  alternate main\nok 8  string browser field as main\nok 9  string browser field as main - require subfile\nok 10  object browser field as main\nok 11  object browser field replace file\nok 12  object browser field replace file - no paths\nok 13  replace module in browser field object\nok 14  replace module in object browser field with subdirectory\nok 15  replace module in object browser field with subdirectory containing\npackage.json\nok 16  replace module in object browser field with subdirectory containing\npackage.json with string browser field as main\nok 17  replace module in object browser field with subdirectory containing\npackage.json with object browser field as main\n# tests 17\n# pass 17\n# fail 0\n```\n\nOnce you've got a way to get TAP out of your tests, just pipe into `faucet`:\n\n![mocha pipe](images/mocha.gif)\n\n# usage\n\n```\nusage:\n  faucet [FILES]\n  command | faucet\n```\n\n# license\n\nMIT\n",
  "readmeFilename": "readme.markdown",
  "bugs": {
    "url": "https://github.com/substack/faucet/issues"
  },
  "_id": "faucet@0.0.1",
  "dist": {
    "shasum": "45b10c3e42a59529ae0b9067413ecf82ea944bb5"
  },
  "_from": "faucet@~0.0.1",
  "_resolved": "https://registry.npmjs.org/faucet/-/faucet-0.0.1.tgz"
}
