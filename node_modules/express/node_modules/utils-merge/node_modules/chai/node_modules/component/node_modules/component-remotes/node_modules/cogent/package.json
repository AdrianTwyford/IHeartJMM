{
  "name": "cogent",
  "version": "0.4.3-fix-redirects",
  "description": "Simpler HTTP requests using co",
  "repository": {
    "type": "git",
    "url": "git://github.com/cojs/cogent"
  },
  "author": {
    "name": "Jonathan Ong",
    "email": "me@jongleberry.com",
    "url": "http://jongleberry.com"
  },
  "license": "MIT",
  "dependencies": {
    "generator-supported": "~0.0.1",
    "debug": "*",
    "netrc": "~0.1.3",
    "proxy-agent": "^1.1.0",
    "write-to": "^1.0.0",
    "raw-body": "^1.1.2",
    "statuses": "^1.0.2"
  },
  "devDependencies": {
    "gnode": "0",
    "regenerator": "0",
    "koa": "0",
    "koa-basic-auth": "^1.1.0",
    "co": "^3.0",
    "mocha": "^1.6",
    "should": "^3.0",
    "proxy": "0"
  },
  "scripts": {
    "test": "make test",
    "prepublish": "make clean build"
  },
  "peerDependencies": {
    "co": "3"
  },
  "readme": "# cogent [![Build Status](https://travis-ci.org/cojs/cogent.png)](https://travis-ci.org/cojs/cogent)\n\nA simple HTTP request agent designed primarily for `GET`ing stuff.\n\nNote: this library relies on [co](https://github.com/visionmedia/co), but does not depend on it directly. You need to install it yourself.\n\n## Features\n\n- Resolve redirects\n- Proxy agent support\n- Timeout support\n- Automatic gunzipping\n- First-class JSON support\n- Buffer the response or save it to a file\n\n## API\n\n```js\nvar request = require('cogent')\n\nvar uri = 'https://raw.github.com/visionmedia/express/master/package.json'\n\n// Pipe stdout\nvar res = yield* request(uri)\nres.pipe(process.stdout)\n\n// Save to a file\nvar res = yield* request(uri, require('os').tmpdir() + '/express.package.json')\nif (res.destination) console.log('ok')\n\n// Get as JSON\nvar res = yield* request(uri, true)\nvar json = res.body\n```\n\nYou can also use it without generators by wrapping it with [co](https://github.com/visionmedia/co):\n\n```js\nvar co = require('co')\nvar request = co(require('cogent'))\n\nrequest('https://github.com', function (err, res) {\n  res.pipe(process.stdout)\n})\n```\n\n### var response = yield* request(url, [options])\n\n`url` is the URL of the request.\nThe options are passed to [http.request()](http://nodejs.org/api/http.html#http_http_request_options_callback).\nAdditional options are:\n\n- `buffer` - buffer the response and save it as `res.buffer`\n- `string` - buffer the response as a string and save it as `res.text`\n- `json` - buffer the response as an object and save it as `res.body`\n- `destination` - cojs/cogent the response to the file `destination`\n- `proxy` - a URL for a proxy server\n- `timeout` - response header timeout per try, default `5000 milliseconds`\n- `retries` - number of retries when request fails due to common server errors, default `0`\n- `redirects` - resolve redirects, default `1`\n\nIf `options === true`, it defaults to `{ json: true }`.\nIf `typeof options === 'string'`, it defaults to `{ destination: string }`.\n\n`response` will have the following properties:\n\n- `res.req` - the request object\n- `res.res` - the response object, itself if the response was not gzipped\n- `res.statusCode`\n- `res.headers`\n- `res.destination` - populated only if the file was successfully saved on a `200`\n- `res.buffer`\n- `res.text`\n- `res.body` - JSON body populated only on a `200`\n\n### request = request.extend(options)\n\nCreate a new `cogent` instance with default options. This allows you to avoid setting the same options every time. See the options listed above.\n\n- `retries`\n- `redirects`\n- `timeout`\n- `method`\n- `gunzip`\n- `netrc`\n- `agent`\n- `proxy`\n\n\n```js\nvar request = require('cogent').extend({\n  auth: 'username:password'\n})\n\nvar res = yield* request('http://localhost/', true)\n// will send with auth header\n```\n\n## License\n\nThe MIT License (MIT)\n\nCopyright (c) 2013 Jonathan Ong me@jongleberry.com\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/cojs/cogent/issues"
  },
  "homepage": "https://github.com/cojs/cogent",
  "_id": "cogent@0.4.3-fix-redirects",
  "dist": {
    "shasum": "cd27a0b11483db6d9ab8c1d1d28b5be1c40095e3"
  },
  "_resolved": "git://github.com/timaschew/cogent#2246bd071392f5053a3a110024fd608a40a593ba",
  "_from": "cogent@git://github.com/timaschew/cogent#fix-redirects"
}
