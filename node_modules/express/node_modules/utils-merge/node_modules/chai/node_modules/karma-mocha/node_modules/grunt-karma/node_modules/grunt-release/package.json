{
  "name": "grunt-release",
  "version": "0.5.1",
  "description": "Release a new version of your Node-based project",
  "main": "Gruntfile.js",
  "scripts": {
    "test": "grunt test"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/geddski/grunt-release.git"
  },
  "keywords": [
    "gruntplugin",
    "bump",
    "release",
    "npm",
    "git"
  ],
  "author": {
    "name": "Dave Geddes"
  },
  "license": "MIT",
  "dependencies": {
    "shelljs": "~0.1.2",
    "semver": "~2.0.10"
  },
  "devDependencies": {
    "grunt": "~0.4.0",
    "grunt-contrib-clean": "~0.4.0",
    "grunt-contrib-nodeunit": "~0.1.2"
  },
  "peerDependencies": {
    "grunt": "~0.4.1"
  },
  "readme": "# grunt-release\n[Grunt](http://gruntjs.com) plugin for automating all the release steps of your node lib or bower component, with optional publishing to npm.  \n\n## Repetition Killed the Cat\nReleasing a new version of your killer Node/Bower/Component/JS lib looks something like this:\n\n1. bump the version in your `package.json` file.\n2. stage the package.json file's change.\n3. commit that change with a message like \"release 0.6.22\".\n4. create a new git tag for the release. \n5. push the changes out to github.\n6. also push the new tag out to github.\n7. publish the new version to npm.\n\nCool, right? No! What's wrong with you? Automate all that:\n\n```shell\ngrunt release\n```\n\nDone. No more github issues reminding you how often you forget to do one or more of the steps.\n\n## Setup\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-release --save-dev\n```\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-release');\n```\n\n## Using grunt-release\n\n**Patch Release:**\n```shell\ngrunt release\n```\nor\n```shell\ngrunt release:patch\n```\n\n**Minor Release:**\n```shell\ngrunt release:minor\n```\n\n**Major Release:**\n```shell\ngrunt release:major\n```\n\n**Pre-release**\n```shell\ngrunt release:prerelease\n```\n\n`prerelease` will just update the number after `MAJOR.MINOR.PATCH` (eg: `1.0.0-1`)\nIf you want to add an alphanumeric identifier, you will need to add it by hand.\nExample: add `-alpha.0` to get something like `1.0.0-alpha.0`. Calling `grunt release:prerelease` will just update the last number to `1.0.0-alpha.1`.\n\n**Releasing Unstable/Beta Versions**\nSometimes it is useful to publish an 'unstable' or 'beta' version to `npm`, while leaving your last stable release as the default that gets installed on an `npm install`. \n`npm` accomplishes this using the `--tag myUnstableVersion` flag. You can enable this flag in grunt-release either by setting the `npmtag` option:\n\n```js\n  release: {\n    options: {\n      npmtag: 'canary',\n    }\n  }\n```\n\nor by passing the CLI arg:\n\n```shell\ngrunt release --npmtag canary\n```\n\nNOTE: If the tag you pass is **true**, then the tag will be the *new* version number after the bump. Otherwise it will be the string you provided.\n\n\n**Dry Run:**\nTo see what grunt-release does, without really changing anything, use `--no-write` option.\n\n```shell\ngrunt --no-write -v release\n```\n\nYou'll see something like:\n```\nParsing package.json...OK\nNot actually writing package.json...OK\n>> Version bumped to 0.2.6\nNot actually running: git add package.json\nNot actually running: git commit package.json -m \"release 0.2.6\"\n>> package.json committed\nNot actually running: git tag 0.2.6 -m \"version 0.2.6\"\n>> New git tag created: 0.2.6\n\nDone, without errors.\n```\n\n## Options\nYou can disable any of the steps if you want, by adding this to your Gruntfile:\n\n```js\n  release: {\n    options: {\n      bump: false, //default: true\n      file: 'component.json', //default: package.json\n      add: false, //default: true\n      commit: false, //default: true\n      tag: false, //default: true\n      push: false, //default: true\n      pushTags: false, //default: true\n      npm: false, //default: true\n      npmtag: true, //default: no tag\n      folder: 'folder/to/publish/to/npm' //default project root\n      tagName: 'some-tag-<%= version %>', //default: '<%= version %>'\n      commitMessage: 'check out my release <%= version %>', //default: 'release <%= version %>'\n      tagMessage: 'tagging version <%= version %>' //default: 'Version <%= version %>'\n    }\n  }\n```\nFor node libs, leave `file` option blank. For bower components, set it to `component.json` or whatever you've set your bower config file to be.\n\n## Credits\nInspired by Vojta Jina's [grunt-bump](https://github.com/vojtajina/grunt-bump).\n\n## License\nMIT\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/geddski/grunt-release/issues"
  },
  "homepage": "https://github.com/geddski/grunt-release",
  "_id": "grunt-release@0.5.1",
  "_from": "grunt-release@~0.5.1"
}
